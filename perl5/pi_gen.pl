#!/usr/bin/env perl
#
# Author: Svitlana Orlova
# Repository: https://github.com/svitlana-orlova/PI
# Description:
#
# Perl5 implementation of the famous PI digits generator
# https://crypto.stanford.edu/pbc/notes/pi/code.html
# It simply generates the whole sequence of digits, up to 800
# as promised
#
package main;

use strict;
use warnings;
use v5.10;
use Test::Simple;

sub pi_gen
{
    my @r = map { 2000 } 0..2800;
    my ($c, $i, $k, $b, $d) = (0, 2800);
    my @result = ();

    $r[$i] = 0;

    for ($k = 2800; $k > 0; $k -= 14) {
        $d = 0;
        $i = $k;

        while (1) {
            $d += $r[$i] * 10000;
            $b = 2 * $i - 1;

            $r[$i] = $d % $b;
            $d /= $b;
            $i--;
            last if ($i == 0);
            $d *= $i;
        }

        push @result, sprintf("%.4d", $c + $d / 10000);

        $c = $d % 10000;
    }

    return @result;
}

&main;
sub main
{
    use constant TEST_PI => qw#
3141592704338943824898204040326855942124067783
03193750665554990134812521997071234503824141505349880638018273511414865705
49478393743102743056929852277483176723379047854252183159170988217736018981
80483767631184035271796271295779821077034396027321691136310393949097364614
34104566792286440610953021920081593653801832425113359836507353131695954913
58445332973600048998282738692219468993420245597686427585341755147226996987
08136172604243606195093940859864652852857329827053859904784860687460031918
84136583553088448658213207697983585282422600411986997781253238936104217845
25477989351166263186654313467234954615515915888427057786100723448778390366
58313452501823041006799528024646077805045221058926438639336641334859640431
35788425339905292326597375263277806909738675929846152488825078185141309765
75319902910537#;

    ok(1 == 1);
    ok(join('', pi_gen) == join('', TEST_PI) =~ s/\s//r);
}

1;
# vim: set ft = perl
__END__

