#!/usr/bin/env perl
#
# Author: Svitlana Orlova
# Repository: https://github.com/svitlana-orlova/PI
# Description:
#
# Perl5 implementation of the famous PI digits generator
# https://crypto.stanford.edu/pbc/notes/pi/code.html
# It simply generates the whole sequence of digits, up to 800
# as promised
#
package main;

use strict;
use warnings;
use v5.10;
use Test::Simple;

sub pi_gen
{
    my @r = map { 2000 } 0..2800;
    my ($c, $i, $k, $b, $d) = (0, 2800);
    my @result = ();

    $r[$i] = 0;

    for ($k = 2800; $k > 0; $k -= 14) {
        $d = 0;
        $i = $k;

        while (1) {
            $d += $r[$i] * 10000;
            $b = 2 * $i - 1;

            $r[$i] = $d % $b;
            $d /= $b;
            $i--;
            last if ($i == 0);
            $d *= $i;
        }

        push @result, sprintf("%.4d", $c + $d / 10000);

        $c = $d % 10000;
    }

    return @result;
}

&main;
sub main
{
    ok(1 == 1);
    ok(join('', pi_gen) == "31415927043389438248982040403268559421240677830319375066555499013481252199707123450382414150534988063801827351141486570549478393743102743056929852277483176723379047854252183159170988217736018981804837676311840352717962712957798210770343960273216911363103939490973646143410456679228644061095302192008159365380183242511335983650735313169595491358445332973600048998282738692219468993420245597686427585341755147226996987081361726042436061950939408598646528528573298270538599047848606874600319188413658355308844865821320769798358528242260041198699778125323893610421784525477989351166263186654313467234954615515915888427057786100723448778390366583134525018230410067995280246460778050452210589264386393366413348596404313578842533990529232659737526327780690973867592984615248882507818514130976575319902910537");
}

1;
# vim: set ft = perl
__END__

